# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python


name: Build And Test              #Workflow Name when you search worflows in the actions tab

on:                               #Listens for push request on main and then it will carry out the rest of the workflow
  push:
    branches: [ "main" ]
    
permissions:
  contents: read
  
jobs:                                    #A Job for the worflow to carry out (made up of steps, can have multiple jobs)
  build:                                 #Name of the job (build, can be any name)

    runs-on: ubuntu-latest                   #runner, is a virtual machine, can uses ubuntu, windows etc

    steps:                                    #How to carry out the job, steps
    - uses: actions/checkout@v3               #step 1, use built in checkout v3 action on github (just checks the entire repo for textfiles, data etc)
    
    - name: Set up Python 3.10                #name of step2  
      uses: actions/setup-python@v3           #use python environment
      with:
        python-version: "3.10"                #specify version
        
    - name: Install dependencies               #step that installs depnedencies to our virtual python environment
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Lint with flake8                                                  #Lints our python file
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Test Option 1                                                #runs python file
      run: python Option1Test.py

    - name: Test Option 3                                                #runs python file to test menu option 3
      run: python Option3Test.py

    - name: Test Option 4                                                #runs python file to test menu option 4
      run: python Option4Test.py

    - name: Test Option 5                                                #runs python file to test menu option 5
      run: python Option5Test.py

    - name: Test Option 6                                                #runs python file to test menu option 6
      run: python Option6Test.py

    - name: Test Option 7                                                #runs python file to test menu option 5
      run: python Option7Test.py


